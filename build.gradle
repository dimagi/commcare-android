////////////
// README //
////////////

// This build script assumes the following directory structure:
// - somewhere/your/code/directory/is
// -- commcare-odk (github: https://github.com/dimagi/commcare-odk/)
// -- commcare (github: https://github.com/dimagi/commcare/)
// -- javarosa (github: https://github.com/dimagi/javarosa/)
// these directories MUST be named like this, or it won't work

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

apply plugin: 'com.android.application'

// we need mavenCentral to fetch eventual dependencies, such as GridViewWithHeaderAndFooter
repositories {
  mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'

    // release build type expects javarosa and commcare jars to be in app/libs
    debugCompile project(':javarosa')
    debugCompile project(':commcare')

    compile project(':javarosa')
    compile project(':commcare')

    compile project(':libraries:mapballoons')
    compile fileTree(dir: 'app/libs', include: '*.jar')
    compile 'in.srain.cube:grid-view-with-header-footer:1.0.12'
    compile 'com.android.support:support-v4:22.1.1'

    debugCompile 'com.facebook.stetho:stetho:1.1.1'
}

project.ext {
    compileSdkVersion = "Google Inc.:Google APIs:22"
    buildToolsVersion = "22.0.1"
}

project(':libraries:mapballoons') {
  android{
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
  }
}

ext {
  // Obtained from ~/.gradle/gradle.properites on build server or load default
  // empty strings.
  MAPS_API_KEY = project.properties['MAPS_API_KEY'] ?: ""
  RELEASE_STORE_FILE = project.properties['RELEASE_STORE_FILE'] ?: "."
  RELEASE_STORE_PASSWORD = project.properties['RELEASE_STORE_PASSWORD'] ?: ""
  RELEASE_KEY_ALIAS = project.properties['RELEASE_KEY_ALIAS'] ?: ""
  RELEASE_KEY_PASSWORD = project.properties['RELEASE_KEY_PASSWORD'] ?: ""
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
      abortOnError false
    }

    packagingOptions {
      exclude 'META-INF/LICENSE'
      exclude 'META-INF/LICENSE.txt'
      exclude 'META-INF/DEPENDENCIES'
      exclude 'META-INF/NOTICE'
      exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        preDexLibraries = true
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    def sourceLocations = ['app/src'
                           , 'libraries/achartengine/achartengine/src'
                          ]

    sourceSets {
      main {
        jniLibs.srcDirs = ['app/libs']
        manifest.srcFile 'app/AndroidManifest.xml'
        java.srcDirs = sourceLocations
        resources.srcDirs = ['app/src']
        aidl.srcDirs = ['app/src']
        renderscript.srcDirs = ['app/src']
        res.srcDirs = ['app/res']
        assets.srcDirs = ['app/assets']
        signingConfigs {
           release {
               storeFile file(project.ext.RELEASE_STORE_FILE)
               storePassword project.ext.RELEASE_STORE_PASSWORD
               keyAlias project.ext.RELEASE_KEY_ALIAS
               keyPassword project.ext.RELEASE_KEY_PASSWORD
           }
        }

        buildTypes {

          debug {
            debuggable true
            java.srcDirs = sourceLocations + ['debug']
            // applicationIdSuffix ".debug"

            buildConfigField "String", "MAPS_API_KEY", "\"${project.ext.MAPS_API_KEY}\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'app/proguard.cfg'
          }
          release {
            buildConfigField "String", "MAPS_API_KEY", "\"${project.ext.MAPS_API_KEY}\""
            signingConfig signingConfigs.release
            java.srcDirs = sourceLocations + ['release']
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'app/proguard.cfg'
          }
        }
      }

      // Move the tests to tests/java, tests/res, etc...
      instrumentTest.setRoot('tests')

      // Move the build types to build-types/<type>
      // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
      // This moves them out of them default location under src/<type>/... which would
      // conflict with src/ being used by the main source set.
      // Adding new build types or product flavors should be accompanied
      // by a similar customization.
      debug.setRoot('build-types/debug')
      release.setRoot('build-types/release')
    }
}
